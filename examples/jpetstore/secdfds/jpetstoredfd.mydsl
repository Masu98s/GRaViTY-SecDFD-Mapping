EDFD jpetstoredfd[
	assets:
		Asset productID
				type: String
				values: [L Av]
				source: Search_Products
				targets: BackendDB,
		Asset product_list
				type: Object
				values: [L Av]
				source: BackendDB
				targets: Frontend,
		Asset itemID 
				type: String
				values: [L Av]
				source: Frontend
				targets: CartDB,
		Asset item_list 
				type: Object
				values: [L Av]
				source: CartDB
				targets: Frontend,
		Asset account_info 
				type: Object
				values: [H I], [H C]
				source: Customer
				targets: CustomerDB, Purchase_Order,
		Asset username 
				type: String
				values: [L I]
				source: Customer
				targets: Authenticate, Purchase_Order, 
		Asset password 
				type: String
				values: [H I], [H C]
				source: Customer
				targets: Authenticate,
		//customer view are all the final Strings defined in ActionBean classes that call viewXXX();
		Asset customer_view 
				type: String
				values: [H I], [H C]
				source: Frontend
				targets: Customer,
		Asset keyword 
				type: String
				values: [L I]
				source: Frontend
				targets: Search_Products,	
		Asset order 
				type: Object
				values: [H C], [H I], [M Av]
				source: Purchase_Order
				targets: BackendDB,
		Asset cart 
				type: Object
				values: [H I], [M Av]
				source: CartDB
				targets: Purchase_Order
	elements:
		ExternalEntity Customer[
			assets: customer_view, account_info, username, password
			outgoing flows: customer_login [num: 1  assets: password, username, account_info targets: Authenticate]
		],
		DataStore CartDB[
			assets: itemID,item_list, cart
			incoming flows: "AddRemove_Items.add_or_remove"
			outgoing flows: read_cart_items [num: 1 assets: item_list targets: AddRemove_Items],
							read_cart [num: 1 assets: cart targets: Purchase_Order]	
		],
		DataStore CustomerDB[
			assets: account_info
			incoming flows: "jpetstoredfd.Manage_Account.write_account_info"
			outgoing flows: read_account_info [num: 1 assets: account_info targets: Purchase_Order]	
		],
		DataStore BackendDB[
			assets: order, product_list, productID
			incoming flows: "jpetstoredfd.Purchase_Order.send_order", 
							"jpetstoredfd.Search_Products.read_products"
			outgoing flows: read_product_list [num: 1 assets: product_list targets: Search_Products]	
		],
		Process Authenticate[
			assets: password, username, account_info
			incoming flows: "Customer.customer_login"
			outgoing flows: info_to_frontend [num: 1 assets: account_info targets: Frontend]
		],
		Process Update_View[
			assets: customer_view
			incoming flows: "jpetstoredfd.Frontend.update_content"
			outgoing flows: provide_content [num: 1 assets: customer_view targets: Customer]
		],
		Process Frontend[
			assets: account_info, itemID, item_list, keyword, product_list, username, customer_view
			incoming flows: "jpetstoredfd.Authenticate.info_to_frontend",
							"jpetstoredfd.AddRemove_Items.provide_item_list",
							"jpetstoredfd.Search_Products.provide_product_list"
			outgoing flows: update_content [num: 1 assets: customer_view targets: Update_View],
							manage_cart [num: 1 assets: itemID targets: AddRemove_Items],
							browse_catalog [num: 1 assets: keyword targets: Search_Products],
							initiate_confirm_purchase [num: 1 assets: username targets: Purchase_Order],
							manage_account [num: 1 assets: account_info targets: Manage_Account]
		],		
		Process Search_Products[
			assets: keyword, product_list, productID
			incoming flows: "jpetstoredfd.Frontend.browse_catalog",
							"jpetstoredfd.BackendDB.read_product_list"
			outgoing flows: read_products [num: 1 assets: productID targets: BackendDB],
							provide_product_list [num: 1 assets: product_list targets: Frontend]
		],	
		Process Purchase_Order[
			assets: username, account_info, cart, order
			incoming flows: "jpetstoredfd.CartDB.read_cart",
							"jpetstoredfd.CustomerDB.read_account_info",
							"jpetstoredfd.Frontend.initiate_confirm_purchase"
			outgoing flows: send_order [num: 1 assets: order targets: BackendDB]
		],
		Process AddRemove_Items[
			assets: itemID, item_list
			incoming flows: "jpetstoredfd.CartDB.read_cart_items",
							"jpetstoredfd.Frontend.manage_cart"
			outgoing flows: add_or_remove [num: 1 assets: itemID targets: CartDB],
							provide_item_list [num: 1 assets: item_list targets: Frontend]
		],
		Process Manage_Account[
			assets: account_info
			incoming flows: "jpetstoredfd.Frontend.manage_account"
			outgoing flows: write_account_info [num: 1 assets: account_info targets: CustomerDB]
		]
]